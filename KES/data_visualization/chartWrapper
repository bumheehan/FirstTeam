ChartWrapper

	모든 차트를 핸들하고 로드하고 그리고 쿼리를 처리하는데 사용함
	차트에서 값을 설정하고 그리는데 편리한 메소드를 제공함
	쿼리 콜백 핸드러를 만들 필요가 없기 때문에 데이터 소스에서 읽는 것을 단순화 하고
	재사용성(reuse)을 위해 차트를 쉽게 저장할 수 있다

	이 클래스를 동적 로드(Dynamic Loading)를 사용하여 라이브러리 로드 수를 줄일 수 있다. 또한 
	
	하지만 현재 차트에 의해 발생된 이벤트의 select, ready, error만 전달한다 다른 이벤트는 ChartWrapper 인스턴스를 통해 전달되지 않는다.
	다른 이벤트를 얻으려면 getChart()와 같이 차트 핸들에서 직접 
	이벤트를 호출해야하고 구독해야 한다
	
	!!주의
		이벤트
		ChartWrapper.draw()는
		이벤트가 발생하기 전에 callback 해야함
		
	select
		사용자가 막대 또는 범례를 클릭하면 시작됩니다. 차트 요소가 선택되면 데이터 테이블의 해당 셀이 선택됩니다. 범례가 선택되면 데이터 테이블의 해당 열이 선택됩니다. 선택한 항목을 확인하려면 전화하십시오 . 이것은 기본 차트 유형이 선택 이벤트를 throw하는 경우에만 발생합니다. 
		ChartWrapper.getChart().getSelection()
	ready
		차트에 외부 메서드 호출을위한 준비가되었습니다. 차트와 상호 작용하고 차트를 그린 후에 메서드 를 호출하려면 메서드 를 호출 하기 전에이 이벤트에 대한 수신기를 설정 draw하고 이벤트가 발생한 후에 만 호출해야합니다.
	error
		차트를 렌더링 할 때 오류가 발생하면 시작됩니다.
		
	[1]장점 
	
		훨씬 적은 코드
		필요한 모든 차트 라이브러리를 로드함
		Query개체 를 만들고 콜백을 처리하여 Datasources를 훨씬 쉽게 쿼리 할 수 있음
		컨테이너 요소 ID를 전달하면 getElementByID가 호출됨
		데이터는 다양한 형식으로 제출할 수 있음 
		값 배열, JSON 리터럴 문자열 또는 DataTable핸들 로 제출할 수 있다.
		
	[2]단점 

		ChartWrapper 현재 selecet, ready, error 만 전달
		다른 이벤트를 얻으려면 래핑 된 차트의 핸들을 가져 와서 이벤트를 구독해야함
	

